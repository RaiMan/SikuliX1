<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.sonatype.oss</groupId>
    <artifactId>oss-parent</artifactId>
    <version>7</version>
  </parent>

  <groupId>com.github.jnr</groupId>
  <artifactId>jnr-unixsocket</artifactId>
  <packaging>jar</packaging>
  <version>0.19</version>
  <name>jnr-unixsocket</name>
  <description>Native I/O access for java</description>
  <url>http://github.com/jnr/jnr-unixsocket</url>

  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:git@github.com:jnr/jnr-unixsocket.git</connection>
    <developerConnection>scm:git:git@github.com:jnr/jnr-unixsocket.git</developerConnection>
    <url>git@github.com:jnr/jnr-unixsocket.git</url>
  </scm>

  <developers>
    <developer>
      <id>wmeissner</id>
      <name>Wayne Meissner</name>
      <email>wmeissner@gmail.com</email>
    </developer>
    <developer>
      <id>felfert</id>
      <name>Fritz Elfert</name>
      <email>fritz-github@fritz-elfert.de</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
  </developers>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.8.2</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-ffi</artifactId>
      <version>2.1.4</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-constants</artifactId>
      <version>0.9.9</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-enxio</artifactId>
      <version>0.17</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.github.jnr</groupId>
      <artifactId>jnr-posix</artifactId>
      <version>3.0.45</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>
  <build>
    <plugins>

      <!-- run checkstyle check -->
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>2.17</version>
        <executions>
          <execution>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <logViolationsToConsole>true</logViolationsToConsole>
              <checkstyleRules>
                <module name="Checker">
                  <!-- Checks for Size Violations.                    -->
                  <!-- See http://checkstyle.sf.net/config_sizes.html -->
                  <module name="FileLength">
                    <property name="max" value="3500" />
                    <property name="fileExtensions" value="java" />
                  </module>
                  <!-- Checks for whitespace                               -->
                  <!-- See http://checkstyle.sf.net/config_whitespace.html -->
                  <module name="FileTabCharacter" />
                </module>
              </checkstyleRules>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- run findbugs check -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>3.0.3</version>
        <executions>
          <execution>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <effort>Max</effort>
          <includeTests>true</includeTests>
          <threshold>Low</threshold>
          <xmlOutput>true</xmlOutput>
          <failOnError>false</failOnError>
        </configuration>
      </plugin>

      <!-- run PMD check -->
      <plugin>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.6</version>
        <configuration>
          <verbose>true</verbose>
          <linkXRef>false</linkXRef>
          <failOnViolation>false</failOnViolation>
          <rulesets>
              <!-- The 5 standard rulesets -->
              <ruleset>/rulesets/java/basic.xml</ruleset>
              <ruleset>/rulesets/java/empty.xml</ruleset>
              <ruleset>/rulesets/java/imports.xml</ruleset>
              <ruleset>/rulesets/java/unnecessary.xml</ruleset>
              <ruleset>/rulesets/java/unusedcode.xml</ruleset>

              <!-- Additional rulesets, see https://pmd.github.io/pmd-5.5.1/pmd-java/rules/index.html -->
              <ruleset>/rulesets/java/braces.xml</ruleset>
              <ruleset>/rulesets/java/finalizers.xml</ruleset>
          </rulesets>
        </configuration>
        <executions>
          <execution>
            <phase>process-test-classes</phase>
            <goals>
              <goal>check</goal>
              <goal>cpd-check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>2.3.7</version>
        <configuration>
          <instructions>
            <_nouses>true</_nouses>
            <Import-Package>*,jnr.ffi.mapper,jnr.ffi.provider.converters,jnr.ffi.provider.jffi,com.kenai.jffi</Import-Package>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <phase>process-classes</phase>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.3.1</version>
        <configuration>
          <archive>
            <manifestFile>${project.build.outputDirectory}/META-INF/MANIFEST.MF</manifestFile>
          </archive>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>jar</goal>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>2.5.5</version>
        <executions>
          <execution>
            <id>assemble-all</id>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
            <configuration>
              <descriptorRefs>
                <descriptorRef>jar-with-dependencies</descriptorRef>
              </descriptorRefs>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.4.0</version>
        <executions>
          <execution>
            <id>pre-execute</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>${project.basedir}/src/test/resources/background.sh</executable>
              <arguments>
                <arg>java -cp target/${project.artifactId}-${project.version}-jar-with-dependencies.jar:target/${project.artifactId}-${project.version}-tests.jar jnr.unixsocket.example.UnixServer</arg>
              </arguments>
              <successCodes>
                <successCode>0</successCode>
              </successCodes>
            </configuration>
          </execution>
          <execution>
            <id>execute</id>
            <phase>integration-test</phase>
            <goals>
              <goal>exec</goal>
            </goals>
            <configuration>
              <executable>java</executable>
              <arguments>
                <arg>-cp</arg>
                <arg>target/${project.artifactId}-${project.version}-jar-with-dependencies.jar:target/${project.artifactId}-${project.version}-tests.jar</arg>
                <arg>jnr.unixsocket.example.UnixClient</arg>
              </arguments>
              <successCodes>
                <successCode>0</successCode>
              </successCodes>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav</artifactId>
      </extension>
    </extensions>
  </build>
</project>
<!-- vim: set sw=2 ts=2 et: -->
