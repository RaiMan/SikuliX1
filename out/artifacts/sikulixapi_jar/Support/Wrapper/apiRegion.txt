/Library/Java/JavaVirtualMachines/jdk-11.jdk/Contents/Home/bin/java "-javaagent:/Applications/IntelliJ IDEA CE.app/Contents/lib/idea_rt.jar=63756:/Applications/IntelliJ IDEA CE.app/Contents/bin" -Dfile.encoding=UTF-8 -classpath /Users/raimundhocke/IdeaProjects/SikuliX1/API/target/classes:/Users/raimundhocke/.m2/repository/commons-cli/commons-cli/1.2/commons-cli-1.2.jar:/Users/raimundhocke/.m2/repository/org/apache/commons/commons-exec/1.3/commons-exec-1.3.jar:/Users/raimundhocke/.m2/repository/commons-net/commons-net/3.4/commons-net-3.4.jar:/Users/raimundhocke/.m2/repository/com/sikulix/sikulix2tigervnc/2.0.0-SNAPSHOT/sikulix2tigervnc-2.0.0-20180306.143551-15.jar:/Users/raimundhocke/.m2/repository/net/java/dev/jna/jna-platform/4.5.2/jna-platform-4.5.2.jar:/Users/raimundhocke/.m2/repository/net/java/dev/jna/jna/4.5.2/jna-4.5.2.jar:/Users/raimundhocke/.m2/repository/net/sourceforge/tess4j/tess4j/3.5.2/tess4j-3.5.2.jar:/Users/raimundhocke/.m2/repository/com/github/jai-imageio/jai-imageio-core/1.4.0/jai-imageio-core-1.4.0.jar:/Users/raimundhocke/.m2/repository/org/ghost4j/ghost4j/1.0.1/ghost4j-1.0.1.jar:/Users/raimundhocke/.m2/repository/log4j/log4j/1.2.17/log4j-1.2.17.jar:/Users/raimundhocke/.m2/repository/commons-beanutils/commons-beanutils/1.9.2/commons-beanutils-1.9.2.jar:/Users/raimundhocke/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/Users/raimundhocke/.m2/repository/org/apache/xmlgraphics/xmlgraphics-commons/1.4/xmlgraphics-commons-1.4.jar:/Users/raimundhocke/.m2/repository/com/lowagie/itext/2.1.7/itext-2.1.7.jar:/Users/raimundhocke/.m2/repository/org/apache/pdfbox/pdfbox/2.0.11/pdfbox-2.0.11.jar:/Users/raimundhocke/.m2/repository/org/apache/pdfbox/fontbox/2.0.11/fontbox-2.0.11.jar:/Users/raimundhocke/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/Users/raimundhocke/.m2/repository/org/apache/pdfbox/pdfbox-tools/2.0.11/pdfbox-tools-2.0.11.jar:/Users/raimundhocke/.m2/repository/org/apache/pdfbox/pdfbox-debugger/2.0.11/pdfbox-debugger-2.0.11.jar:/Users/raimundhocke/.m2/repository/org/apache/pdfbox/jbig2-imageio/3.0.1/jbig2-imageio-3.0.1.jar:/Users/raimundhocke/.m2/repository/commons-io/commons-io/2.6/commons-io-2.6.jar:/Users/raimundhocke/.m2/repository/net/sourceforge/lept4j/lept4j/1.9.4/lept4j-1.9.4.jar:/Users/raimundhocke/.m2/repository/org/jboss/jboss-vfs/3.2.12.Final/jboss-vfs-3.2.12.Final.jar:/Users/raimundhocke/.m2/repository/org/jboss/logging/jboss-logging/3.1.4.GA/jboss-logging-3.1.4.GA.jar:/Users/raimundhocke/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/Users/raimundhocke/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/Users/raimundhocke/.m2/repository/org/slf4j/log4j-over-slf4j/1.7.25/log4j-over-slf4j-1.7.25.jar:/Users/raimundhocke/.m2/repository/org/slf4j/slf4j-nop/1.7.25/slf4j-nop-1.7.25.jar:/Users/raimundhocke/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar org.sikuli.util.Crawler script. Region
------- Class: org.sikuli.script.Region (Object)
                     : [(int,int,int,int), (int,int), (int,int,int,int,IScreen), (int,int,int,int,int), (Region), (java.awt.Rectangle)]
 atMouse             : [() -> Location]
 create              : [(int,int,int,int) -> Region, (java.awt.Rectangle) -> Region, (int,int,int,int,IScreen) -> Region, (Location,int,int) -> Region, (Region) -> Region, (Location,int,int,int,int) -> Region]
 grow                : [(Location,int,int) -> Region, (Location,int,int,int,int) -> Region, (Location) -> Region]
 highlightAllOff     : [() -> void]
 make                : [(ArrayList) -> Region]
 virtual             : [(java.awt.Rectangle) -> Region]
+AutoWaitTimeout     : [set(double) -> void, get() -> double]
+BottomLeft          : [get() -> Location, set(Location) -> Region]
+BottomRight         : [get() -> Location, set(Location) -> Region]
+Center              : [get() -> Location, set(Location) -> Region]
+Cols                : [set(int) -> Region, get() -> int]
+FindFailedResponse  : [set() -> void, get() -> ]
+H                   : [get() -> int, set(int) -> void]
+Name                : [get() -> String, set(String) -> void]
+ObserveScanRate     : [get() -> float, set(float) -> void]
+Rect                : [get() -> java.awt.angle, set(java.awt.angle) -> Region, set(int,int,int,int) -> Region, set(Region) -> Region]
+RepeatWaitTime      : [get() -> int, set(int) -> void]
+ROI                 : [set() -> void, set(Region) -> void, set(java.awt.Rectangle) -> void, set(int,int,int,int) -> void, get() -> Region]
+Rows                : [set(int) -> Region, get() -> int]
+ThrowException      : [set(boolean) -> void, get() -> boolean]
+TopLeft             : [get() -> Location, set(Location) -> Region]
+TopRight            : [get() -> Location, set(Location) -> Region]
+W                   : [get() -> int, set(int) -> void]
+WaitScanRate        : [get() -> float, set(float) -> void]
+X                   : [get() -> int, set(int) -> void]
+Y                   : [get() -> int, set(int) -> void]
above                : [() -> Region, (int) -> Region]
aboveAt              : [() -> Location, (int) -> Location]
add                  : [(Region) -> Region, (int,int,int,int) -> Region, (Location) -> Region]
aInput               : [(String) -> void]
aKey                 : [(int) -> void]
asOffset             : [() -> Location]
aSwipe               : [(PFRML,PFRML) -> void!]
aSwipeDown           : [() -> void]
aSwipeLeft           : [() -> void]
aSwipeRight          : [() -> void]
aSwipeUp             : [() -> void]
aTap                 : [(PFRML) -> void!]
below                : [(int) -> Region, () -> Region]
belowAt              : [(int) -> Location, () -> Location]
collectLines         : [() -> List<Match>]
collectLinesText     : [() -> List<String>]
collectWords         : [() -> List<Match>]
collectWordsText     : [() -> List<String>]
contains             : [(Location) -> boolean, (Region) -> boolean]
containsMouse        : [() -> boolean]
copyTo               : [(int) -> Region, (IScreen) -> Region]
delayClick           : [(int) -> void]
delayType            : [(int) -> void]
doubleClick          : [(PFRML,Integer) -> int!, () -> int, (PFRML) -> int!]
drag                 : [(PFRML) -> int!]
dragDrop             : [(PFRML,PFRML) -> int!, (PFRML) -> int!]
dropAt               : [(PFRML) -> int!]
exists               : [(PSI) -> Match, (PSI,double) -> Match]
existsT              : [(String) -> Match, (String,double) -> Match]
existsText           : [(String,double) -> Match, (String) -> Match]
find                 : [(PSI) -> Match!]
findAll              : [(PSI) -> Iterator<Match>!]
findAllByColumn      : [(PSI) -> List<Match>]
findAllByRow         : [(PSI) -> List<Match>]
findAllList          : [(PSI) -> List<Match>]
findAllT             : [(String) -> List<Match>]
findAllText          : [(String) -> List<Match>]
findAny              : [(Object...) -> List<Match>]
findAnyList          : [(List<Object>) -> List<Match>]
findBest             : [(Object...) -> Match]
findBestList         : [(List<Object>) -> Match]
findLine             : [(String) -> Match]
findLines            : [(String) -> List<Match>]
findT                : [(String) -> Match!]
findText             : [(String) -> Match!]
findWord             : [(String) -> Match]
findWords            : [(String) -> List<Match>]
get                  : [(int) -> Region]
getAll               : [(PSI) -> List<Match>]
getCell              : [(int,int) -> Region]
getCol               : [(int,int) -> Region, (int) -> Region]
getColW              : [() -> int]
getEvent             : [(String) -> Observe]
getEvents            : [() -> ObserveEvent[]]
getInset             : [(Region) -> Region]
getLastMatch         : [() -> Match]
getLastMatches       : [() -> Iterator<Match>]
getLastScreenImage   : [() -> ScreenImage]
getLastScreenImageFile : [() -> String!, (String,String) -> String!, (String) -> String!]
getRow               : [(int,int) -> Region, (int) -> Region]
getRowH              : [() -> int]
getScreen            : [() -> I]
getScreenContaining  : [() -> IScreen]
getTarget            : [() -> Location]
grow                 : [(int) -> Region, (int,int,int,int) -> Region, (int,int) -> Region, () -> Region]
has                  : [(PSI) -> boolean, (PSI,double) -> boolean]
hasEvents            : [() -> boolean]
hasObserver          : [() -> boolean]
hasT                 : [(String) -> Match]
hasText              : [(String) -> Match]
highlightOff         : [() -> Region]
highlightOn          : [() -> Region, (String) -> Region]
initScreen           : [(IScreen) -> void]
inside               : [() -> Region]
intersection         : [(Region) -> Region]
isObserving          : [() -> boolean]
isOtherScreen        : [() -> boolean]
isRasterValid        : [() -> boolean]
isValid              : [() -> boolean]
isVirtual            : [() -> boolean]
keyDown              : [(int) -> void, (String) -> void]
keyUp                : [() -> void, (int) -> void, (String) -> void]
left                 : [(int) -> Region, () -> Region]
leftAt               : [(int) -> Location, () -> Location]
morphTo              : [(Region) -> Region]
mouseDown            : [(int) -> void]
mouseMove            : [() -> int, (PFRML) -> int!, (int,int) -> int]
mouseUp              : [(int) -> void, () -> void]
moveTo               : [(Location) -> Region]
nearby               : [(int) -> Region, () -> Region]
observe              : [() -> boolean, (double) -> boolean]
observeInBackground  : [(double) -> boolean, () -> boolean]
observeInLine        : [(double) -> boolean]
offset               : [(int,int) -> Region, (Object) -> Region]
onAppear             : [(PSI,Object) -> String, (PSI) -> String]
onChange             : [(Integer,Object) -> String, (Integer) -> String, (Object) -> String, () -> String]
onChangeDo           : [(Integer,Object) -> String]
onVanish             : [(PSI) -> String, (PSI,Object) -> String]
paste                : [(PFRML,String) -> int!, (String) -> int]
resetScreens         : [() -> void]
right                : [(int) -> Region, () -> Region]
rightAt              : [() -> Location, (int) -> Location]
rightClick           : [() -> int, (PFRML,Integer) -> int!, (PFRML) -> int!]
saveLastScreenImage  : [() -> void]
saveScreenCapture    : [(String) -> String, (String,String) -> String, () -> String]
setActive            : [(String) -> void]
setFindFailedHandler : [(Object) -> void]
setImageMissingHandler : [(Object) -> void]
setInactive          : [(String) -> void]
setLocation          : [() -> Region]
setOtherScreen       : [() -> void, (IScreen) -> Region]
setRaster            : [(int,int) -> Region]
setSize              : [(int,int) -> Region]
setVirtual           : [(boolean) -> void]
showScreens          : [() -> void]
stopObserver         : [(String) -> void, () -> void]
text                 : [() -> String]
toString             : [() -> String]
toStringShort        : [() -> String]
type                 : [(String,int) -> int, (String,String) -> int, (PFRML,String,String) -> int!, (PFRML,String,int) -> int!, (PFRML,String) -> int!, (String) -> int]
union                : [(Region) -> Region]
unionAll             : [(PSI) -> Region]
unionAny             : [(Object...) -> Region]
unionAnyList         : [(List<Object>) -> Region]
wait                 : [(double) -> void, (PSI,double) -> Match!, (PSI) -> Match!]
waitT                : [(String,double) -> Match!, (String) -> Match!]
waitText             : [(String) -> Match!, (String,double) -> Match!]
waitVanish           : [(PSI) -> boolean, (PSI,double) -> boolean]
wheel                : [(PFRML,int,int,int) -> int!, (PFRML,int,int) -> int!, (int,int) -> int]
write                : [(String) -> int]

---------- implemented
highlight            : [(int,String) -> Region, () -> Region, (String) -> Region, (float) -> Region, (float,String) -> Region, (int) -> Region]
hover                : [(PFRML) -> int!, () -> int]
click                : [(PFRML) -> int!, () -> int, (PFRML,Integer) -> int!]
